
CREATE TABLE IF NOT EXISTS t_users (
	id		INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
	name	VARCHAR(30) NOT NULL,
	surname	VARCHAR(20),
	email	VARCHAR(50) NULL DEFAULT NULL,
	PRIMARY KEY (id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS t_auth (
	user_id			INTEGER UNSIGNED NOT NULL,
	active			TINYINT(1) NOT NULL DEFAULT 0,
	login			VARCHAR(50) NULL DEFAULT NULL,
	password		VARCHAR(255) NULL DEFAULT NULL,
	passwordExpire	DATETIME NULL DEFAULT NULL,
	tfaKey			TINYBLOB NULL DEFAULT NULL,
	tfaRescue		BLOB NULL DEFAULT NULL,
	PRIMARY KEY (user_id),
	CONSTRAINT uk_t_auth__login UNIQUE KEY (login),
	CONSTRAINT fk_t_auth__user_id FOREIGN KEY (user_id) REFERENCES t_users (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS t_tokens (
	type			ENUM('ACTIVATE-USER', 'AUTH-REFRESH', 'AUTH-REMEMBER', 'RESET-EMAIL', 'RESET-PWD') NOT NULL,
	user_id			INTEGER UNSIGNED NULL DEFAULT NULL,
	token			CHAR(64) NOT NULL,
	data			VARCHAR(1024) NULL DEFAULT NULL,
	expire			DATETIME NOT NULL,
	PRIMARY KEY (token),
	INDEX k_type (type),
	CONSTRAINT fk_t_tokens__user_id FOREIGN KEY (user_id) REFERENCES t_users (id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TRIGGER IF EXISTS triggerAI_t_users;
CREATE TRIGGER triggerAI_t_users AFTER INSERT ON t_users FOR EACH ROW BEGIN
	INSERT INTO t_auth (user_id, login) VALUES (NEW.id, NEW.email);
END;

DROP TRIGGER IF EXISTS triggerAU_t_users;
CREATE TRIGGER triggerAU_t_users AFTER UPDATE ON t_users FOR EACH ROW BEGIN
	UPDATE t_auth SET login = NEW.email WHERE user_id = NEW.id;
END;
